{"version":3,"sources":["../server/api.js"],"names":["router","Router","post","req","res","body","email","password","statusMessage","status","end","name","split","replace","now","Date","token","getTime","session","json","get","query","then","tasks","params","id","result","task","delete","undefined","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEAD,OAAOE,IAAP,CAAY,WAAZ,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACTD,IAAIE,IADK;AAAA,MAC7BC,KAD6B,aAC7BA,KAD6B;AAAA,MACtBC,QADsB,aACtBA,QADsB;;AAErC,MAAI,CAACD,KAAD,IAAU,CAACC,QAAX,IAAuBD,UAAU,OAArC,EAA8C;AAC5CF,QAAII,aAAJ,GAAoB,2BAApB;AACAJ,QAAIK,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD,GAHD,MAGO;AACL,QAAMC,OAAOL,MAAMM,KAAN,CAAY,GAAZ,EAAiB,CAAjB,EAAoBC,OAApB,CAA4B,MAA5B,EAAoC,GAApC,CAAb,CADK,CACkD;AACvD,QAAMC,MAAM,IAAIC,IAAJ,EAAZ;AACA,QAAMC,mBAAiBF,IAAIG,OAAJ,EAAvB,CAHK,CAGmC;AACxC,QAAMC,UAAU,EAAEZ,YAAF,EAASK,UAAT,EAAeK,YAAf,EAAhB;AACA,0BAAWA,KAAX,EAAkBE,OAAlB;AACAd,QAAIe,IAAJ,CAASD,OAAT;AACD;AACF,CAbD;;AAeAlB,OAAOoB,GAAP,CAAW,OAAX,EAAoB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAChC,sBAASD,IAAIkB,KAAb,EAAoBC,IAApB,CAAyB;AAAA,WAASlB,IAAIe,IAAJ,CAASI,KAAT,CAAT;AAAA,GAAzB;AACD,CAFD;;AAIAvB,OAAOoB,GAAP,CAAW,WAAX,EAAwB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AACpC,qBAAQD,IAAIqB,MAAJ,CAAWC,EAAnB,EAAuBH,IAAvB,CAA4B,UAACI,MAAD,EAAY;AACtC,QAAI,CAACA,OAAOC,IAAZ,EAAkB;AAChBvB,UAAIK,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD,KAFD,MAEO;AACLN,UAAIe,IAAJ,CAASO,MAAT;AACD;AACF,GAND;AAOD,CARD;;AAUA1B,OAAO4B,MAAP,CAAc,aAAd,EAA6B,UAACzB,GAAD,EAAMC,GAAN,EAAc;AACzCA,MAAIe,IAAJ,CAASU,SAAT;AACD,CAFD;;AAIAC,OAAOC,OAAP,GAAiB/B,MAAjB","file":"api.js","sourcesContent":["import express from 'express';\nimport { addSession, getTasks, getTask } from './data';\n\nconst router = express.Router();\n\nrouter.post('/sessions', (req, res) => {\n  const { email, password } = req.body;\n  if (!email || !password || email === 'error') {\n    res.statusMessage = 'Invalid email or password';\n    res.status(401).end();\n  } else {\n    const name = email.split('@')[0].replace(/\\.|_/, ' '); // simulated\n    const now = new Date();\n    const token = `token-${now.getTime()}`; // simulated\n    const session = { email, name, token };\n    addSession(token, session);\n    res.json(session);\n  }\n});\n\nrouter.get('/task', (req, res) => {\n  getTasks(req.query).then(tasks => res.json(tasks));\n});\n\nrouter.get('/task/:id', (req, res) => {\n  getTask(req.params.id).then((result) => {\n    if (!result.task) {\n      res.status(404).end();\n    } else {\n      res.json(result);\n    }\n  });\n});\n\nrouter.delete('/sessions/*', (req, res) => {\n  res.json(undefined);\n});\n\nmodule.exports = router;\n"]}